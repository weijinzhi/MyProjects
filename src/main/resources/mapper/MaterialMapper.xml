<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zstu.dao.MaterialMapper">
  <resultMap id="BaseResultMap" type="com.zstu.bean.Material">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="material_title" jdbcType="VARCHAR" property="materialTitle" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="download_times" jdbcType="INTEGER" property="downloadTimes" />
    <result column="material_file_name" jdbcType="VARCHAR" property="materialFileName" />
    <result column="material_file_path" jdbcType="VARCHAR" property="materialFilePath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, material_title, create_time, teacher_id, course_id, download_times, material_file_name, 
    material_file_path
  </sql>
  <select id="selectByExample" parameterType="com.zstu.bean.MaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from material
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from material
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zstu.bean.MaterialExample">
    delete from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zstu.bean.Material">
    insert into material (id, material_title, create_time, 
      teacher_id, course_id, download_times, 
      material_file_name, material_file_path)
    values (#{id,jdbcType=INTEGER}, #{materialTitle,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, 
      #{teacherId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{downloadTimes,jdbcType=INTEGER}, 
      #{materialFileName,jdbcType=VARCHAR}, #{materialFilePath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zstu.bean.Material">
    insert into material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="materialTitle != null">
        material_title,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="downloadTimes != null">
        download_times,
      </if>
      <if test="materialFileName != null">
        material_file_name,
      </if>
      <if test="materialFilePath != null">
        material_file_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="materialTitle != null">
        #{materialTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="downloadTimes != null">
        #{downloadTimes,jdbcType=INTEGER},
      </if>
      <if test="materialFileName != null">
        #{materialFileName,jdbcType=VARCHAR},
      </if>
      <if test="materialFilePath != null">
        #{materialFilePath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zstu.bean.MaterialExample" resultType="java.lang.Long">
    select count(*) from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update material
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.materialTitle != null">
        material_title = #{record.materialTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.downloadTimes != null">
        download_times = #{record.downloadTimes,jdbcType=INTEGER},
      </if>
      <if test="record.materialFileName != null">
        material_file_name = #{record.materialFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.materialFilePath != null">
        material_file_path = #{record.materialFilePath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update material
    set id = #{record.id,jdbcType=INTEGER},
      material_title = #{record.materialTitle,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=DATE},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      download_times = #{record.downloadTimes,jdbcType=INTEGER},
      material_file_name = #{record.materialFileName,jdbcType=VARCHAR},
      material_file_path = #{record.materialFilePath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zstu.bean.Material">
    update material
    <set>
      <if test="materialTitle != null">
        material_title = #{materialTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="downloadTimes != null">
        download_times = #{downloadTimes,jdbcType=INTEGER},
      </if>
      <if test="materialFileName != null">
        material_file_name = #{materialFileName,jdbcType=VARCHAR},
      </if>
      <if test="materialFilePath != null">
        material_file_path = #{materialFilePath,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zstu.bean.Material">
    update material
    set material_title = #{materialTitle,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      download_times = #{downloadTimes,jdbcType=INTEGER},
      material_file_name = #{materialFileName,jdbcType=VARCHAR},
      material_file_path = #{materialFilePath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>