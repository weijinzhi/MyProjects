<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zstu.dao.MessagesMapper">
  <resultMap id="BaseResultMap" type="com.zstu.bean.Messages">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mess_title" jdbcType="VARCHAR" property="messTitle" />
    <result column="mess_content" jdbcType="VARCHAR" property="messContent" />
    <result column="mess_type" jdbcType="CHAR" property="messType" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
  </resultMap>
  
  <resultMap type="com.zstu.bean.Messages" id="WithTeacherResultMap">
	    <id column="id" jdbcType="INTEGER" property="id" />
		<result column="mess_title" jdbcType="VARCHAR" property="messTitle" />
		<result column="mess_content" jdbcType="VARCHAR" property="messContent" />
		<result column="mess_type" jdbcType="CHAR" property="messType" />
		<result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
		<result column="create_time" jdbcType="DATE" property="createTime" />
		<association property="teacher" javaType="com.zstu.bean.Teacher">
		<id column="id" property="id"/>
		<result column = "teacher_name" property="teacherName"/>
		</association>
	</resultMap>
	
	<sql id="WithTeacherName_Column_List">
			m.id, m.mess_title, m.mess_content, m.mess_type, m.teacher_id,
		m.create_time,t.id,t.teacher_id,t.teacher_name
	</sql>
	<!-- List<Messages> selectByExampleWithTeacher(MessagesExample example); 
		Messages selectByPrimaryKeyWithTeacher(Integer id); -->
	<select id="selectByExampleWithTeacher" resultMap="WithTeacherResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="WithTeacherName_Column_List" />
		FROM messages m,teacher t
		WHERE m.`teacher_id`=t.`id`
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mess_title, mess_content, mess_type, teacher_id, create_time
  </sql>
  <select id="selectByExample" parameterType="com.zstu.bean.MessagesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from messages
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from messages
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from messages
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zstu.bean.MessagesExample">
    delete from messages
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zstu.bean.Messages">
    insert into messages (id, mess_title, mess_content, 
      mess_type, teacher_id, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{messTitle,jdbcType=VARCHAR}, #{messContent,jdbcType=VARCHAR}, 
      #{messType,jdbcType=CHAR}, #{teacherId,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zstu.bean.Messages">
    insert into messages
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="messTitle != null">
        mess_title,
      </if>
      <if test="messContent != null">
        mess_content,
      </if>
      <if test="messType != null">
        mess_type,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="messTitle != null">
        #{messTitle,jdbcType=VARCHAR},
      </if>
      <if test="messContent != null">
        #{messContent,jdbcType=VARCHAR},
      </if>
      <if test="messType != null">
        #{messType,jdbcType=CHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zstu.bean.MessagesExample" resultType="java.lang.Long">
    select count(*) from messages
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update messages
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.messTitle != null">
        mess_title = #{record.messTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.messContent != null">
        mess_content = #{record.messContent,jdbcType=VARCHAR},
      </if>
      <if test="record.messType != null">
        mess_type = #{record.messType,jdbcType=CHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update messages
    set id = #{record.id,jdbcType=INTEGER},
      mess_title = #{record.messTitle,jdbcType=VARCHAR},
      mess_content = #{record.messContent,jdbcType=VARCHAR},
      mess_type = #{record.messType,jdbcType=CHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zstu.bean.Messages">
    update messages
    <set>
      <if test="messTitle != null">
        mess_title = #{messTitle,jdbcType=VARCHAR},
      </if>
      <if test="messContent != null">
        mess_content = #{messContent,jdbcType=VARCHAR},
      </if>
      <if test="messType != null">
        mess_type = #{messType,jdbcType=CHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zstu.bean.Messages">
    update messages
    set mess_title = #{messTitle,jdbcType=VARCHAR},
      mess_content = #{messContent,jdbcType=VARCHAR},
      mess_type = #{messType,jdbcType=CHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>