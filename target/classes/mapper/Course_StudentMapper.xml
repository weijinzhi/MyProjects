<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zstu.dao.Course_StudentMapper">
	<resultMap id="BaseResultMap" type="com.zstu.bean.Course_Student">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="course_id" jdbcType="INTEGER" property="courseId" />
		<result column="student_id" jdbcType="INTEGER" property="studentId" />
	</resultMap>
	<resultMap type="com.zstu.bean.Course_Student" id="WithCourseLabResultMap">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="course_id" jdbcType="INTEGER" property="courseId" />
		<result column="student_id" jdbcType="INTEGER" property="studentId" />
		<association property="courses" javaType="com.zstu.bean.Courses">
			<id column="id" property="id" />
			<result column="course_name" property="courseName" />
			<result column="start_time" property="startTime" />
			<result column="end_time" property="endTime" />
			<result column="teacher_id" property="teacherId" />
			<association property="lab" javaType="com.zstu.bean.Lab">
				<id column="id" property="id" />
				<result column="locate" property="locate" />
			</association>
			<association property="teacher" javaType="com.zstu.bean.Teacher">
				<id column="id" property="id" />
				<result column="teacher_name" property="teacherName" />
			</association>
		</association>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, course_id, student_id
	</sql>
	<!-- <sql id="WithCourse_Colunm_List"> cs.id, cs.course_id, cs.student_id,c.id,c.course_name,c.credit,c.start_time,c.end_time,c.lab_id,c.teacher_id,l.id,l.lab_num,l.lab_type,lab_cap,l.locate, 
		s.id,s.student_id,s.student_name,s.password,s.sex,s.classNum,s.academy </sql> -->
	<!-- List<Course_Student> selectByExampleWithCourse(Course_StudentExample 
		example); Course_Student selectByPrimaryKeyWithCourse(Integer id); -->

	<!-- 查询实验课程安排，带课程和实验室 -->
	<!-- <select id="selectByExampleWithCourse" resultMap="WithCourseLabResultMap"> 
		select <if test="distinct"> distinct </if> <include refid="WithCourse_Column_List" 
		/> FROM course_student cs,courses c,teacher t,lab l,student s WHERE cs.`course_id`=c.`id` 
		AND c.`lab_id`=l.`id` and c.teacher_id = t.id and cs.student_id=s.id <if 
		test="_parameter != null"> <include refid="Example_Where_Clause" /> </if> 
		<if test="orderByClause != null"> order by ${orderByClause} </if> </select> -->
	<select id="selectByPrimaryKeyWithCourse" parameterType="java.lang.String"
		resultMap="WithCourseLabResultMap">
		select*
		FROM course_student cs,courses c,teacher t,lab
		l,student s
		WHERE
		cs.`course_id`=c.`id` AND c.`lab_id`=l.`id` and
		c.teacher_id = t.id
		and cs.student_id=s.id
		and s.student_id =
		#{id,jdbcType=VARCHAR}
	</select>
	<!-- <select id="selectByPrimaryKeyWithCourse" resultMap="WithCourseLabResultMap"> 
		select <include refid="WithCourse_Colunm_List"/> FROM course_student cs,courses 
		c,teacher t,lab l WHERE cs.`course_id`=c.`id` AND c.`lab_id`=l.`id` where 
		id = #{id,jdbcType=INTEGER} </select> -->

	<select id="selectByExample" parameterType="com.zstu.bean.Course_StudentExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from course_student
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from course_student
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		course_student
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.zstu.bean.Course_StudentExample">
		delete from course_student
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.zstu.bean.Course_Student">
		insert into course_student
		(id, course_id, student_id
		)
		values (#{id,jdbcType=INTEGER},
		#{courseId,jdbcType=INTEGER},
		#{studentId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.zstu.bean.Course_Student">
		insert into course_student
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="courseId != null">
				course_id,
			</if>
			<if test="studentId != null">
				student_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="courseId != null">
				#{courseId,jdbcType=INTEGER},
			</if>
			<if test="studentId != null">
				#{studentId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.zstu.bean.Course_StudentExample"
		resultType="java.lang.Long">
		select count(*) from course_student
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update course_student
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.courseId != null">
				course_id = #{record.courseId,jdbcType=INTEGER},
			</if>
			<if test="record.studentId != null">
				student_id = #{record.studentId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update course_student
		set id = #{record.id,jdbcType=INTEGER},
		course_id
		= #{record.courseId,jdbcType=INTEGER},
		student_id =
		#{record.studentId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.zstu.bean.Course_Student">
		update course_student
		<set>
			<if test="courseId != null">
				course_id = #{courseId,jdbcType=INTEGER},
			</if>
			<if test="studentId != null">
				student_id = #{studentId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zstu.bean.Course_Student">
		update
		course_student
		set course_id = #{courseId,jdbcType=INTEGER},
		student_id
		= #{studentId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>