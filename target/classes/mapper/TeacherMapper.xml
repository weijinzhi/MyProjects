<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zstu.dao.TeacherMapper">
	<resultMap id="BaseResultMap" type="com.zstu.bean.Teacher">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
		<result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="sex" jdbcType="CHAR" property="sex" />
		<result column="academy" jdbcType="VARCHAR" property="academy" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, teacher_id, teacher_name, password, phone, sex, academy
	</sql>
	<!-- ================================================================== -->
	<!-- 查询单条记录 -->
	<select id="selectTeacherById" parameterType="int" resultMap="BaseResultMap">
		SELECT * FROM teacher WHERE id = #{id}
	</select>
	<select id="selectTeacherByName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT *
		FROM teacher
		WHERE 1 = 1
		<if test="teacherName != null and teacherName !=''">
			AND teacher_name = #{teacherName,jdbcType=VARCHAR}
		</if>
		ORDER BY id
	</select>
	<select id="selectTeacherByTeaId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT *
		FROM teacher
		WHERE teacher_id = #{teacherId,jdbcType=VARCHAR}
	</select>
	<select id="selectTeacherByAcademy" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT *
		FROM teacher
		WHERE 1 = 1
		<if test="academy != null and academy !=''">
			AND academy = #{academy,jdbcType=VARCHAR}
		</if>
		ORDER BY id
	</select>
	<!-- ======================================================================= -->
	<!--  
	<select id="listRole" parameterType="java.lang.String"
		resultMap="listRole">
		SELECT *
		FROM teacher t,teacher_role tr,role r
		WHERE
		t.teacher_id = #{teacherId,jdbcType=VARCHAR}
		and t.id=tr.teacher_id and r.id=tr.role_id
	</select>
	-->
	<!-- =========================================================================== -->

	<select id="login" parameterType="com.zstu.bean.Teacher"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from teacher
		where teacher_id = #{teacherId,jdbcType=INTEGER}
	</select>

	<select id="getById" parameterType="com.zstu.bean.Teacher"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from teacher
		where teacher_id = #{teacherId,jdbcType=INTEGER}
	</select>

	<select id="selectByExample" parameterType="com.zstu.bean.TeacherExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from teacher
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from teacher
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from teacher
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.zstu.bean.TeacherExample">
		delete from teacher
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.zstu.bean.Teacher">
		insert into teacher (id, teacher_id, teacher_name,
		password, phone, sex,
		academy)
		values (#{id,jdbcType=INTEGER}, #{teacherId,jdbcType=VARCHAR},
		#{teacherName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR},
		#{academy,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.zstu.bean.Teacher">
		insert into teacher
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="teacherId != null">
				teacher_id,
			</if>
			<if test="teacherName != null">
				teacher_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="academy != null">
				academy,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="teacherId != null">
				#{teacherId,jdbcType=VARCHAR},
			</if>
			<if test="teacherName != null">
				#{teacherName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=CHAR},
			</if>
			<if test="academy != null">
				#{academy,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.zstu.bean.TeacherExample"
		resultType="java.lang.Long">
		select count(*) from teacher
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update teacher
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.teacherId != null">
				teacher_id = #{record.teacherId,jdbcType=VARCHAR},
			</if>
			<if test="record.teacherName != null">
				teacher_name = #{record.teacherName,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.sex != null">
				sex = #{record.sex,jdbcType=CHAR},
			</if>
			<if test="record.academy != null">
				academy = #{record.academy,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update teacher
		set id = #{record.id,jdbcType=INTEGER},
		teacher_id = #{record.teacherId,jdbcType=VARCHAR},
		teacher_name = #{record.teacherName,jdbcType=VARCHAR},
		password = #{record.password,jdbcType=VARCHAR},
		phone = #{record.phone,jdbcType=VARCHAR},
		sex = #{record.sex,jdbcType=CHAR},
		academy = #{record.academy,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.zstu.bean.Teacher">
		update teacher
		<set>
			<if test="teacherId != null">
				teacher_id = #{teacherId,jdbcType=VARCHAR},
			</if>
			<if test="teacherName != null">
				teacher_name = #{teacherName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=CHAR},
			</if>
			<if test="academy != null">
				academy = #{academy,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zstu.bean.Teacher">
		update teacher
		set teacher_id = #{teacherId,jdbcType=VARCHAR},
		teacher_name = #{teacherName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=CHAR},
		academy = #{academy,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>